create table if not exists categoryOfSoftware
                          (categoryId integer primary key,
                           Name nvarchar(1));
insert into categoryOfSoftware (Name) values('A'),
                                            ('B'),
                                            ('C'),
                                            ('D');
                                            
select * from categoryOfSoftware;
------------------------------------------------------------------------------------------


create table if not exists departments
                          (departmentId integer primary key,
                           Name nvarchar(30));
insert into departments (Name) values('Finance'),
                                     ('HR'),
                                     ('Travel'),
                                     ('Software and Data'),
                                     ('IT Support');
select * from departments;
-----------------------------------------------------------------------------------------------

create table employer (employerId integer primary key,
                       Name nvarchar(50),
                       joiningDate text,
                       position nvarchar(30),
                       department integer,
                       assigned_project text,
                       foreign key(department)
                          references departments(departmentId)
                          on delete cascade
                          on update no action);
                          

insert into employer(Name,joiningDate,position,department,assigned_project) 
             values ('Marton','2022-20-20','backend developer',4,'springboot'),
                    ('Simon','2022-20-20','backend developer',4,'spring_project'),
                    ('Viktor','2022-20-20','frontend developer',5,'react_project'),
                    ('Orban','2022-20-20','data engineer',3,'azure'),
                    ('Barnabas','2022-20-20','data engineer',1,'aws'),
                    ('Krisztian','2022-20-20','backend developer',2,'springboot'),
                    ('Shingayi','2022-20-20','frontend developer',5,'angular_project'),
                    ('Ramzan','2022-20-20','frontend developer',2,'react'),
                    ('Gabor','2022-20-20','data engineer',4,'azure'),
                    ('Shukhrat','2022-20-20','backend developer',1,'springboot');  
                          
select * from employer;
-------------------------------------------------------------------------------------------------------


create table services (softwareId integer primary key,
                       Name nvarchar(50),
                       category integer,
                       size integer,
                       numberOfInstallments integer,
                       foreign key(category)
                          references categoryOfSoftware(categoryId)
                          on delete cascade
                          on update no action);
                          

insert into services(Name,category,size,numberOfInstallments)
              values('VsCode',1,3,0),
                    ('Teams',4,1,0),
                    ('SqlLite',2,3,0),
                    ('Discord',4,2,0),                    
                    ('MongoDb',2,4,0),
                    ('PgAdmin',2,1,0),
                    ('Chromium',3,3,0),
                    ('FireFox',3,3,0),
                    ('Notepad',1,3,0),
                    ('Postman',1,3,0),
                    ('Excel',4,3,0);  
                    
select * from services;  
 
---------------------------------------------------------------------------------------------------------                         

create table requests (requestId integer primary key,
                       employerId integer,
                       softwareId integer,
                       start_date text,
                       close_date text,
                       status text,
                       foreign key(employerId)
                          references employer(employerId)
                          on delete cascade
                          on update no action,
                       foreign key(softwareId)
                          references services(softwareId)
                          on delete cascade
                          on update no action);
                          


   
                    


--------------------------------------------------------------------------------------------------------------------------

                    
--triggers on REQUESTS table

create trigger addition after insert
on requests
begin
   update services set numberOfInstallments = (select numberOfInstallments from services as s where s.softwareId=new.softwareId) + 1  where softwareId=new.softwareId;
end;
                 
create trigger invalid after update
on requests
when new.status='invalid'
begin
   update services set numberOfInstallments = (select numberOfInstallments from services as s where s.softwareId=new.softwareId) - 1  where softwareId=new.softwareId;
end;



------------------------------------------------------------------------------------------------------------------------------------------


--when we insert or update to invalid it changes value of numberOfInstallments in SERVICES table


insert into requests(employerId,softwareId,start_date,close_date,status)
              values(3,11,datetime('now'),datetime('now','+1 month'),'approved'),
                    (2,7,datetime('now'),datetime('now','+1 month'),'approved'),
                    (5,5,datetime('now'),datetime('now','+1 month'),'approved'),
                    (8,1,datetime('now'),datetime('now','+1 month'),'approved'); 


update requests set status='invalid' where requestId = 1;            


select * from requests;

----------------------------------------------------------------------------------------------------------------------------------         




select * from categoryOfSoftware;
select * from departments;
select * from employer;
select * from requests;
select * from services;


